print(next(max(wins) for poss in [[int(line.strip()[28:]) for line in open('input.txt')]] for rolls in [{3:1, 4:3, 5:6, 6:7, 7:6, 8:3, 9:1}] for dp in [{((0,0),tuple(poss),0) : 1}] for to_visit in [{(0,0) : set([((0,0),tuple(poss),0)])}] for wins in [[0,0]] for _ in [[wins.insert(0, wins.pop(0) + k * dp[((s1,s2),(p1,p2),turn)]) if turn == 0 and s1+((p1+d-1)%10)+1 >= 21 else wins.insert(1, wins.pop(1) + k * dp[((s1,s2),(p1,p2),turn)]) if turn == 1 and s2+((p2+d-1)%10)+1 >= 21 else (to_visit.update({new_state[0] : set([new_state])}) if new_state[0] not in to_visit else to_visit[new_state[0]].add(new_state), dp.update({new_state : (0 if new_state not in dp else dp[new_state]) + k * dp[((s1,s2),(p1,p2),turn)]})) for t1 in range(21) for t2 in range(21) if (t1,t2) in to_visit for (s1,s2),(p1,p2),turn in to_visit[(t1,t2)] for d,k in rolls.items() for new_state in [((s1+((p1+d-1)%10)+1,s2),((p1+d-1)%10+1,p2),1) if turn == 0 else ((s1,s2+((p2+d-1)%10)+1),(p1,(p2+d-1)%10+1),0)]]]))
